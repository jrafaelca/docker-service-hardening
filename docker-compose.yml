services:
  traefik:
    image: traefik:v3.0
    container_name: traefik
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - /run/user/1000/docker.sock:/var/run/docker.sock:ro
      - /opt/docker/letsencrypt:/letsencrypt
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.le.acme.httpchallenge=true"
      - "--certificatesresolvers.le.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.le.acme.email=${TRAEFIK_ACME_EMAIL}"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
    restart: unless-stopped
    networks:
      - proxy
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 512M

  mariadb:
    image: mariadb:11
    container_name: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: "${MARIADB_PASSWORD}"
    volumes:
      - mariadb:/var/lib/mysql
    networks:
      - services
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "healthcheck.sh", "--connect", "--innodb_initialized" ]
      retries: 3
      timeout: 5s
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1G

  valkey:
    image: valkey/valkey:alpine
    container_name: valkey
    command:
      - "valkey-server"
      - "--requirepass"
      - "${VALKEY_PASSWORD}"
    volumes:
      - valkey:/data
    networks:
      - services
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "valkey-cli", "-a", "${VALKEY_PASSWORD}", "ping" ]
      retries: 3
      timeout: 5s
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M

networks:
  services:
    driver: bridge
  proxy:
    driver: bridge

volumes:
  mariadb:
    driver: local
    driver_opts:
      type: none
      device: /opt/docker/volumes/mariadb
      o: bind
  valkey:
    driver: local
    driver_opts:
      type: none
      device: /opt/docker/volumes/valkey
      o: bind